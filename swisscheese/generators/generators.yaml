solution: /submissions/accepted/solution.py
#visualizer: /visualizers/asy.sh {name}
# By default, generated files are not ignored.
gitignore_generated: true

data:
  sample:
    type: directory
    # Uncomment to disable generating ans files for sample cases.
    solution: /submissions/accepted/solution.py
    data:
      # Some small examples showing to help understanding of the problem
      #'1':
      #'2':

  secret:
    type: directory
    data:
      # You can re-use the input validator by symlinking it as `generator` in
      # this directory. Below is some inspiration for test cases.
      #
      # Use `-X` to set the value of variable `X`, as provided to the `read_*` functions.
      # Use `min` and `max` to set variables to their minimum and maximum
      # allowed values.
      #- min: generator {seed} -n min -k min -ai min
      #- max: generator {seed} -n max -k max -ai max
      # Leave a variable out to pick a uniform random value.
      #- random_a: generator {seed} -n max
      # Provide an explicit list of values:
      #- binary: generator {seed} -ai 0,1
      # Provide probabilities for each value:
      #- mostly_0: generator {seed} -ai 0:0.99,1:0.01
      # Uniform random values in range:
      #- small_a: generator {seed} -n 10 -ai 1..100
      # Use a geometric distribution (see validation.h for more):
      #- geometric: generator {seed} -n 100 -k 123 -ai geometric(0.1)

      # Manual cases can be added like this:
      #- handcrafted: manual/handcrafted.in
      # They should be written to somewhere inside generators/ and will be
      # copied into data/.
      # You can also dump them in data/secret and run `bt generate --add-manual`
      # followed by `bt generate --move-manual`.

      # Typically, small test cases are more likely to find bugs/edge cases.
      # When the limit on n is 1000, do something like:
      #- small: generator {seed} -n 1
      #- small: generator {seed} -n 2
      #- small: generator {seed} -n 3
      #- small: generator {seed} -n 7
      #- small: generator {seed} -n 13
      - small_perfect: generate_testcase.py {seed:123} 20 20 5
      - small_perfect: generate_testcase.py {seed:345} 20 20 4
      - small_perfect: generate_testcase.py {seed:444} 20 20 3
      - small_normal: generate_testcase.py {seed:2348} 20 20 5 normal
      - small_normal: generate_testcase.py {seed:1911} 20 20 4 normal
      - small_normal: generate_testcase.py {seed:5931} 20 20 3 normal
      - small_random: generator {seed:284392} -n 10..30 -m 10..30
      - small_random: generator {seed:3492} -n 10..30 -m 10..30
      - small_random: generator {seed:429234} -n 10..30 -m 10..30
      - small_random: generator {seed:5634958} -n 10..30 -m 10..30

      - normal_perfect: generate_testcase.py {seed:243893} 100 80 10
      - normal_perfect: generate_testcase.py {seed:123434} 90 120 20
      - normal_perfect: generate_testcase.py {seed:13243} 60 100 15
      - normal_normal: generate_testcase.py {seed:14333} 10 200 10 normal
      - normal_normal: generate_testcase.py {seed:5934} 85 63 20 normal
      - normal_normal: generate_testcase.py {seed:456} 150 99 15 normal
      - normal_random: generator {seed:09843} -n 60..150 -m 60..150
      - normal_random: generator {seed:456672} -n 60..150 -m 60..150
      - normal_random: generator {seed:4392036} -n 60..150 -m 60..150
      - normal_random: generator {seed:643649} -n 60..150 -m 60..150

      - large_perfect: generate_testcase.py {seed:401343} 800 50 100
      - large_perfect: generate_testcase.py {seed:9385293} 1000 500 3
      - large_perfect: generate_testcase.py {seed:41482935} 562 777 1
      - large_perfect: generate_testcase.py {seed:237332} 1000 1000 100
      - large_normal: generate_testcase.py {seed:32393} 1000 900 50 normal
      - large_normal: generate_testcase.py {seed:93623} 900 500 5 normal
      - large_normal: generate_testcase.py {seed:162732} 800 350 100 normal
      - large_random: generator {seed:384324} -n 600.1000 -m 600.1000
      - large_random: generator {seed:991512} -n 600.1000 -m 600.1000
      - large_random: generator {seed:152681} -n 600.1000 -m 600.1000
      - large_random: generator {seed:1520422} -n 600.1000 -m 600.1000
      #- medium: generator {seed} -n 103
      #- medium: generator {seed} -n 243
      #- large: generator {seed} -n 991
      #- large: generator {seed} -n 999
      #- large: generator {seed} -n 1000
